#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PTF.Data.Existing
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="PTF")]
	public partial class ExistingDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    #endregion
		
		public ExistingDataContext() : 
				base(global::PTF.Data.Properties.Settings.Default.PTFConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ExistingDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExistingDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExistingDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExistingDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ExistingConstructInventory> ExistingConstructInventories
		{
			get
			{
				return this.GetTable<ExistingConstructInventory>();
			}
		}
		
		public System.Data.Linq.Table<ExistingPlantInventory> ExistingPlantInventories
		{
			get
			{
				return this.GetTable<ExistingPlantInventory>();
			}
		}
		
		public System.Data.Linq.Table<ExistingExperimentInventory> ExistingExperimentInventories
		{
			get
			{
				return this.GetTable<ExistingExperimentInventory>();
			}
		}
	}
	
	[Table(Name="dbo.ExistingConstructInventory")]
	public partial class ExistingConstructInventory
	{
		
		private string _Construct_Code;
		
		private string ___of_Plants_Requested;
		
		private string ___Plants_Delivered;
		
		private string _Transformation_Initiated;
		
		private string _PI_Construct_name;
		
		private string _Agro_Strains;
		
		private string _PI_Code;
		
		private string _Bacterial_Selection;
		
		private string _Plasmid;
		
		private string _Trait;
		
		private string _Gene_of_interest;
		
		private string _Plant_Selection;
		
		private string _PI;
		
		private string _Client;
		
		private System.Nullable<int> _Archived_Box;
		
		private System.Nullable<int> _Position;
		
		private System.Nullable<int> _Working_Box;
		
		private string _Location;
		
		private string _Target_Crop;
		
		private string _Cultivar;
		
		private string _Available_for_UC_researchers;
		
		private string _Comment;
		
		private string _Recharge_Number;
		
		private string _Recharge_Amount;
		
		private string _Contract_Executed;
		
		private string _Status;
		
		private string _Invoice_sent;
		
		private System.Nullable<System.DateTime> _Date_Received;
		
		public ExistingConstructInventory()
		{
		}
		
		[Column(Name="[Construct Code]", Storage="_Construct_Code", DbType="NVarChar(10)")]
		public string Construct_Code
		{
			get
			{
				return this._Construct_Code;
			}
			set
			{
				if ((this._Construct_Code != value))
				{
					this._Construct_Code = value;
				}
			}
		}
		
		[Column(Name="[# of Plants Requested]", Storage="___of_Plants_Requested", DbType="NVarChar(255)")]
		public string @__of_Plants_Requested
		{
			get
			{
				return this.___of_Plants_Requested;
			}
			set
			{
				if ((this.___of_Plants_Requested != value))
				{
					this.___of_Plants_Requested = value;
				}
			}
		}
		
		[Column(Name="[# Plants Delivered]", Storage="___Plants_Delivered", DbType="NVarChar(50)")]
		public string @__Plants_Delivered
		{
			get
			{
				return this.___Plants_Delivered;
			}
			set
			{
				if ((this.___Plants_Delivered != value))
				{
					this.___Plants_Delivered = value;
				}
			}
		}
		
		[Column(Name="[Transformation Initiated]", Storage="_Transformation_Initiated", DbType="NVarChar(255)")]
		public string Transformation_Initiated
		{
			get
			{
				return this._Transformation_Initiated;
			}
			set
			{
				if ((this._Transformation_Initiated != value))
				{
					this._Transformation_Initiated = value;
				}
			}
		}
		
		[Column(Name="[PI Construct name]", Storage="_PI_Construct_name", DbType="NVarChar(50)")]
		public string PI_Construct_name
		{
			get
			{
				return this._PI_Construct_name;
			}
			set
			{
				if ((this._PI_Construct_name != value))
				{
					this._PI_Construct_name = value;
				}
			}
		}
		
		[Column(Name="[Agro Strains]", Storage="_Agro_Strains", DbType="NVarChar(255)")]
		public string Agro_Strains
		{
			get
			{
				return this._Agro_Strains;
			}
			set
			{
				if ((this._Agro_Strains != value))
				{
					this._Agro_Strains = value;
				}
			}
		}
		
		[Column(Name="[PI Code]", Storage="_PI_Code", DbType="NVarChar(100)")]
		public string PI_Code
		{
			get
			{
				return this._PI_Code;
			}
			set
			{
				if ((this._PI_Code != value))
				{
					this._PI_Code = value;
				}
			}
		}
		
		[Column(Name="[Bacterial Selection]", Storage="_Bacterial_Selection", DbType="NVarChar(50)")]
		public string Bacterial_Selection
		{
			get
			{
				return this._Bacterial_Selection;
			}
			set
			{
				if ((this._Bacterial_Selection != value))
				{
					this._Bacterial_Selection = value;
				}
			}
		}
		
		[Column(Storage="_Plasmid", DbType="NVarChar(50)")]
		public string Plasmid
		{
			get
			{
				return this._Plasmid;
			}
			set
			{
				if ((this._Plasmid != value))
				{
					this._Plasmid = value;
				}
			}
		}
		
		[Column(Storage="_Trait", DbType="NVarChar(100)")]
		public string Trait
		{
			get
			{
				return this._Trait;
			}
			set
			{
				if ((this._Trait != value))
				{
					this._Trait = value;
				}
			}
		}
		
		[Column(Name="[Gene of interest]", Storage="_Gene_of_interest", DbType="NVarChar(200)")]
		public string Gene_of_interest
		{
			get
			{
				return this._Gene_of_interest;
			}
			set
			{
				if ((this._Gene_of_interest != value))
				{
					this._Gene_of_interest = value;
				}
			}
		}
		
		[Column(Name="[Plant Selection]", Storage="_Plant_Selection", DbType="NVarChar(50)")]
		public string Plant_Selection
		{
			get
			{
				return this._Plant_Selection;
			}
			set
			{
				if ((this._Plant_Selection != value))
				{
					this._Plant_Selection = value;
				}
			}
		}
		
		[Column(Storage="_PI", DbType="NVarChar(50)")]
		public string PI
		{
			get
			{
				return this._PI;
			}
			set
			{
				if ((this._PI != value))
				{
					this._PI = value;
				}
			}
		}
		
		[Column(Storage="_Client", DbType="NVarChar(50)")]
		public string Client
		{
			get
			{
				return this._Client;
			}
			set
			{
				if ((this._Client != value))
				{
					this._Client = value;
				}
			}
		}
		
		[Column(Name="[Archived Box]", Storage="_Archived_Box", DbType="Int")]
		public System.Nullable<int> Archived_Box
		{
			get
			{
				return this._Archived_Box;
			}
			set
			{
				if ((this._Archived_Box != value))
				{
					this._Archived_Box = value;
				}
			}
		}
		
		[Column(Storage="_Position", DbType="Int")]
		public System.Nullable<int> Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this._Position = value;
				}
			}
		}
		
		[Column(Name="[Working Box]", Storage="_Working_Box", DbType="Int")]
		public System.Nullable<int> Working_Box
		{
			get
			{
				return this._Working_Box;
			}
			set
			{
				if ((this._Working_Box != value))
				{
					this._Working_Box = value;
				}
			}
		}
		
		[Column(Storage="_Location", DbType="NVarChar(50)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this._Location = value;
				}
			}
		}
		
		[Column(Name="[Target Crop]", Storage="_Target_Crop", DbType="NVarChar(50)")]
		public string Target_Crop
		{
			get
			{
				return this._Target_Crop;
			}
			set
			{
				if ((this._Target_Crop != value))
				{
					this._Target_Crop = value;
				}
			}
		}
		
		[Column(Storage="_Cultivar", DbType="NVarChar(50)")]
		public string Cultivar
		{
			get
			{
				return this._Cultivar;
			}
			set
			{
				if ((this._Cultivar != value))
				{
					this._Cultivar = value;
				}
			}
		}
		
		[Column(Name="[Available for UC researchers]", Storage="_Available_for_UC_researchers", DbType="NVarChar(50)")]
		public string Available_for_UC_researchers
		{
			get
			{
				return this._Available_for_UC_researchers;
			}
			set
			{
				if ((this._Available_for_UC_researchers != value))
				{
					this._Available_for_UC_researchers = value;
				}
			}
		}
		
		[Column(Storage="_Comment", DbType="NVarChar(50)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[Column(Name="[Recharge Number]", Storage="_Recharge_Number", DbType="NVarChar(50)")]
		public string Recharge_Number
		{
			get
			{
				return this._Recharge_Number;
			}
			set
			{
				if ((this._Recharge_Number != value))
				{
					this._Recharge_Number = value;
				}
			}
		}
		
		[Column(Name="[Recharge Amount]", Storage="_Recharge_Amount", DbType="NVarChar(50)")]
		public string Recharge_Amount
		{
			get
			{
				return this._Recharge_Amount;
			}
			set
			{
				if ((this._Recharge_Amount != value))
				{
					this._Recharge_Amount = value;
				}
			}
		}
		
		[Column(Name="[Contract Executed]", Storage="_Contract_Executed", DbType="NVarChar(50)")]
		public string Contract_Executed
		{
			get
			{
				return this._Contract_Executed;
			}
			set
			{
				if ((this._Contract_Executed != value))
				{
					this._Contract_Executed = value;
				}
			}
		}
		
		[Column(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[Column(Name="[Invoice sent]", Storage="_Invoice_sent", DbType="NVarChar(50)")]
		public string Invoice_sent
		{
			get
			{
				return this._Invoice_sent;
			}
			set
			{
				if ((this._Invoice_sent != value))
				{
					this._Invoice_sent = value;
				}
			}
		}
		
		[Column(Name="[Date Received]", Storage="_Date_Received", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Received
		{
			get
			{
				return this._Date_Received;
			}
			set
			{
				if ((this._Date_Received != value))
				{
					this._Date_Received = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.ExistingPlantInventory")]
	public partial class ExistingPlantInventory
	{
		
		private string _Pedigree;
		
		private System.Nullable<int> _Transformation_Code;
		
		private string _Crop;
		
		private System.Nullable<System.DateTime> _Date_Initiated;
		
		private System.Nullable<System.DateTime> _Date_entered;
		
		private string _Genotype;
		
		private string _PI;
		
		private string _Client;
		
		private System.Nullable<int> ___Plants_Requested;
		
		private string _Agro_Strains;
		
		private string _Construct_code;
		
		private string _PI_Construct_Code;
		
		private string _Gene_of_Interest;
		
		private string _Selection;
		
		private string _Plasmid;
		
		private string _Trait;
		
		private string _Re_callusing_Assay;
		
		private string _Rooting;
		
		private string _Comment;
		
		private string _Date_delivered;
		
		public ExistingPlantInventory()
		{
		}
		
		[Column(Storage="_Pedigree", DbType="NVarChar(15)")]
		public string Pedigree
		{
			get
			{
				return this._Pedigree;
			}
			set
			{
				if ((this._Pedigree != value))
				{
					this._Pedigree = value;
				}
			}
		}
		
		[Column(Name="[Transformation Code]", Storage="_Transformation_Code", DbType="Int")]
		public System.Nullable<int> Transformation_Code
		{
			get
			{
				return this._Transformation_Code;
			}
			set
			{
				if ((this._Transformation_Code != value))
				{
					this._Transformation_Code = value;
				}
			}
		}
		
		[Column(Storage="_Crop", DbType="NVarChar(255)")]
		public string Crop
		{
			get
			{
				return this._Crop;
			}
			set
			{
				if ((this._Crop != value))
				{
					this._Crop = value;
				}
			}
		}
		
		[Column(Name="[Date Initiated]", Storage="_Date_Initiated", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_Initiated
		{
			get
			{
				return this._Date_Initiated;
			}
			set
			{
				if ((this._Date_Initiated != value))
				{
					this._Date_Initiated = value;
				}
			}
		}
		
		[Column(Name="[Date entered]", Storage="_Date_entered", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date_entered
		{
			get
			{
				return this._Date_entered;
			}
			set
			{
				if ((this._Date_entered != value))
				{
					this._Date_entered = value;
				}
			}
		}
		
		[Column(Storage="_Genotype", DbType="NVarChar(50)")]
		public string Genotype
		{
			get
			{
				return this._Genotype;
			}
			set
			{
				if ((this._Genotype != value))
				{
					this._Genotype = value;
				}
			}
		}
		
		[Column(Storage="_PI", DbType="NVarChar(255)")]
		public string PI
		{
			get
			{
				return this._PI;
			}
			set
			{
				if ((this._PI != value))
				{
					this._PI = value;
				}
			}
		}
		
		[Column(Storage="_Client", DbType="NVarChar(50)")]
		public string Client
		{
			get
			{
				return this._Client;
			}
			set
			{
				if ((this._Client != value))
				{
					this._Client = value;
				}
			}
		}
		
		[Column(Name="[# Plants Requested]", Storage="___Plants_Requested", DbType="Int")]
		public System.Nullable<int> @__Plants_Requested
		{
			get
			{
				return this.___Plants_Requested;
			}
			set
			{
				if ((this.___Plants_Requested != value))
				{
					this.___Plants_Requested = value;
				}
			}
		}
		
		[Column(Name="[Agro Strains]", Storage="_Agro_Strains", DbType="NVarChar(255)")]
		public string Agro_Strains
		{
			get
			{
				return this._Agro_Strains;
			}
			set
			{
				if ((this._Agro_Strains != value))
				{
					this._Agro_Strains = value;
				}
			}
		}
		
		[Column(Name="[Construct code]", Storage="_Construct_code", DbType="NVarChar(50)")]
		public string Construct_code
		{
			get
			{
				return this._Construct_code;
			}
			set
			{
				if ((this._Construct_code != value))
				{
					this._Construct_code = value;
				}
			}
		}
		
		[Column(Name="[PI Construct Code]", Storage="_PI_Construct_Code", DbType="NVarChar(255)")]
		public string PI_Construct_Code
		{
			get
			{
				return this._PI_Construct_Code;
			}
			set
			{
				if ((this._PI_Construct_Code != value))
				{
					this._PI_Construct_Code = value;
				}
			}
		}
		
		[Column(Name="[Gene of Interest]", Storage="_Gene_of_Interest", DbType="NVarChar(100)")]
		public string Gene_of_Interest
		{
			get
			{
				return this._Gene_of_Interest;
			}
			set
			{
				if ((this._Gene_of_Interest != value))
				{
					this._Gene_of_Interest = value;
				}
			}
		}
		
		[Column(Storage="_Selection", DbType="NVarChar(50)")]
		public string Selection
		{
			get
			{
				return this._Selection;
			}
			set
			{
				if ((this._Selection != value))
				{
					this._Selection = value;
				}
			}
		}
		
		[Column(Storage="_Plasmid", DbType="NVarChar(50)")]
		public string Plasmid
		{
			get
			{
				return this._Plasmid;
			}
			set
			{
				if ((this._Plasmid != value))
				{
					this._Plasmid = value;
				}
			}
		}
		
		[Column(Storage="_Trait", DbType="NVarChar(50)")]
		public string Trait
		{
			get
			{
				return this._Trait;
			}
			set
			{
				if ((this._Trait != value))
				{
					this._Trait = value;
				}
			}
		}
		
		[Column(Name="[Re-callusing Assay]", Storage="_Re_callusing_Assay", DbType="NVarChar(50)")]
		public string Re_callusing_Assay
		{
			get
			{
				return this._Re_callusing_Assay;
			}
			set
			{
				if ((this._Re_callusing_Assay != value))
				{
					this._Re_callusing_Assay = value;
				}
			}
		}
		
		[Column(Storage="_Rooting", DbType="NVarChar(50)")]
		public string Rooting
		{
			get
			{
				return this._Rooting;
			}
			set
			{
				if ((this._Rooting != value))
				{
					this._Rooting = value;
				}
			}
		}
		
		[Column(Storage="_Comment", DbType="NVarChar(50)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[Column(Name="[Date delivered]", Storage="_Date_delivered", DbType="NVarChar(50)")]
		public string Date_delivered
		{
			get
			{
				return this._Date_delivered;
			}
			set
			{
				if ((this._Date_delivered != value))
				{
					this._Date_delivered = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.ExistingExperimentInventory")]
	public partial class ExistingExperimentInventory
	{
		
		private System.Nullable<int> _Experiment;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _PI;
		
		private string _Client;
		
		private string _Operator;
		
		private string _Crop_species;
		
		private string _Cultivar;
		
		private string _Seed_Lot_Number;
		
		private string _Agro_Strain;
		
		private string _Agro_Code;
		
		private string _PI_Construct_Code;
		
		private string _Plasmid;
		
		private string _Agro_Selection;
		
		private string _Plant_Selection;
		
		private string _Explant;
		
		private string _Precondition;
		
		private string _Co_Culture;
		
		private string _Induction;
		
		private string _Induction_II;
		
		private string _Induction_III;
		
		private string _Elongation_Germination;
		
		private string _Recallusing;
		
		private string _Rooting;
		
		private string _Trait;
		
		private string _Comment;
		
		private System.Nullable<System.DateTime> _Invoice_Sent;
		
		private System.Nullable<int> _Targeted___of_Plants;
		
		private System.Nullable<double> _Optical_Density;
		
		public ExistingExperimentInventory()
		{
		}
		
		[Column(Storage="_Experiment", DbType="Int")]
		public System.Nullable<int> Experiment
		{
			get
			{
				return this._Experiment;
			}
			set
			{
				if ((this._Experiment != value))
				{
					this._Experiment = value;
				}
			}
		}
		
		[Column(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[Column(Storage="_PI", DbType="NVarChar(255)")]
		public string PI
		{
			get
			{
				return this._PI;
			}
			set
			{
				if ((this._PI != value))
				{
					this._PI = value;
				}
			}
		}
		
		[Column(Storage="_Client", DbType="NVarChar(50)")]
		public string Client
		{
			get
			{
				return this._Client;
			}
			set
			{
				if ((this._Client != value))
				{
					this._Client = value;
				}
			}
		}
		
		[Column(Storage="_Operator", DbType="NVarChar(50)")]
		public string Operator
		{
			get
			{
				return this._Operator;
			}
			set
			{
				if ((this._Operator != value))
				{
					this._Operator = value;
				}
			}
		}
		
		[Column(Name="[Crop species]", Storage="_Crop_species", DbType="NVarChar(50)")]
		public string Crop_species
		{
			get
			{
				return this._Crop_species;
			}
			set
			{
				if ((this._Crop_species != value))
				{
					this._Crop_species = value;
				}
			}
		}
		
		[Column(Storage="_Cultivar", DbType="NVarChar(50)")]
		public string Cultivar
		{
			get
			{
				return this._Cultivar;
			}
			set
			{
				if ((this._Cultivar != value))
				{
					this._Cultivar = value;
				}
			}
		}
		
		[Column(Name="[Seed Lot Number]", Storage="_Seed_Lot_Number", DbType="NVarChar(50)")]
		public string Seed_Lot_Number
		{
			get
			{
				return this._Seed_Lot_Number;
			}
			set
			{
				if ((this._Seed_Lot_Number != value))
				{
					this._Seed_Lot_Number = value;
				}
			}
		}
		
		[Column(Name="[Agro Strain]", Storage="_Agro_Strain", DbType="NVarChar(50)")]
		public string Agro_Strain
		{
			get
			{
				return this._Agro_Strain;
			}
			set
			{
				if ((this._Agro_Strain != value))
				{
					this._Agro_Strain = value;
				}
			}
		}
		
		[Column(Name="[Agro Code]", Storage="_Agro_Code", DbType="NVarChar(50)")]
		public string Agro_Code
		{
			get
			{
				return this._Agro_Code;
			}
			set
			{
				if ((this._Agro_Code != value))
				{
					this._Agro_Code = value;
				}
			}
		}
		
		[Column(Name="[PI Construct Code]", Storage="_PI_Construct_Code", DbType="NVarChar(50)")]
		public string PI_Construct_Code
		{
			get
			{
				return this._PI_Construct_Code;
			}
			set
			{
				if ((this._PI_Construct_Code != value))
				{
					this._PI_Construct_Code = value;
				}
			}
		}
		
		[Column(Storage="_Plasmid", DbType="NVarChar(50)")]
		public string Plasmid
		{
			get
			{
				return this._Plasmid;
			}
			set
			{
				if ((this._Plasmid != value))
				{
					this._Plasmid = value;
				}
			}
		}
		
		[Column(Name="[Agro Selection]", Storage="_Agro_Selection", DbType="NVarChar(50)")]
		public string Agro_Selection
		{
			get
			{
				return this._Agro_Selection;
			}
			set
			{
				if ((this._Agro_Selection != value))
				{
					this._Agro_Selection = value;
				}
			}
		}
		
		[Column(Name="[Plant Selection]", Storage="_Plant_Selection", DbType="NVarChar(50)")]
		public string Plant_Selection
		{
			get
			{
				return this._Plant_Selection;
			}
			set
			{
				if ((this._Plant_Selection != value))
				{
					this._Plant_Selection = value;
				}
			}
		}
		
		[Column(Storage="_Explant", DbType="NVarChar(50)")]
		public string Explant
		{
			get
			{
				return this._Explant;
			}
			set
			{
				if ((this._Explant != value))
				{
					this._Explant = value;
				}
			}
		}
		
		[Column(Storage="_Precondition", DbType="NVarChar(80)")]
		public string Precondition
		{
			get
			{
				return this._Precondition;
			}
			set
			{
				if ((this._Precondition != value))
				{
					this._Precondition = value;
				}
			}
		}
		
		[Column(Name="[Co-Culture]", Storage="_Co_Culture", DbType="NVarChar(80)")]
		public string Co_Culture
		{
			get
			{
				return this._Co_Culture;
			}
			set
			{
				if ((this._Co_Culture != value))
				{
					this._Co_Culture = value;
				}
			}
		}
		
		[Column(Storage="_Induction", DbType="NVarChar(255)")]
		public string Induction
		{
			get
			{
				return this._Induction;
			}
			set
			{
				if ((this._Induction != value))
				{
					this._Induction = value;
				}
			}
		}
		
		[Column(Name="[Induction II]", Storage="_Induction_II", DbType="NVarChar(255)")]
		public string Induction_II
		{
			get
			{
				return this._Induction_II;
			}
			set
			{
				if ((this._Induction_II != value))
				{
					this._Induction_II = value;
				}
			}
		}
		
		[Column(Name="[Induction III]", Storage="_Induction_III", DbType="NVarChar(255)")]
		public string Induction_III
		{
			get
			{
				return this._Induction_III;
			}
			set
			{
				if ((this._Induction_III != value))
				{
					this._Induction_III = value;
				}
			}
		}
		
		[Column(Name="[Elongation/Germination]", Storage="_Elongation_Germination", DbType="NVarChar(100)")]
		public string Elongation_Germination
		{
			get
			{
				return this._Elongation_Germination;
			}
			set
			{
				if ((this._Elongation_Germination != value))
				{
					this._Elongation_Germination = value;
				}
			}
		}
		
		[Column(Storage="_Recallusing", DbType="NVarChar(255)")]
		public string Recallusing
		{
			get
			{
				return this._Recallusing;
			}
			set
			{
				if ((this._Recallusing != value))
				{
					this._Recallusing = value;
				}
			}
		}
		
		[Column(Storage="_Rooting", DbType="NVarChar(255)")]
		public string Rooting
		{
			get
			{
				return this._Rooting;
			}
			set
			{
				if ((this._Rooting != value))
				{
					this._Rooting = value;
				}
			}
		}
		
		[Column(Storage="_Trait", DbType="NVarChar(50)")]
		public string Trait
		{
			get
			{
				return this._Trait;
			}
			set
			{
				if ((this._Trait != value))
				{
					this._Trait = value;
				}
			}
		}
		
		[Column(Storage="_Comment", DbType="NVarChar(150)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[Column(Name="[Invoice Sent]", Storage="_Invoice_Sent", DbType="DateTime")]
		public System.Nullable<System.DateTime> Invoice_Sent
		{
			get
			{
				return this._Invoice_Sent;
			}
			set
			{
				if ((this._Invoice_Sent != value))
				{
					this._Invoice_Sent = value;
				}
			}
		}
		
		[Column(Name="[Targeted # of Plants]", Storage="_Targeted___of_Plants", DbType="Int")]
		public System.Nullable<int> Targeted___of_Plants
		{
			get
			{
				return this._Targeted___of_Plants;
			}
			set
			{
				if ((this._Targeted___of_Plants != value))
				{
					this._Targeted___of_Plants = value;
				}
			}
		}
		
		[Column(Name="[Optical Density]", Storage="_Optical_Density", DbType="Float")]
		public System.Nullable<double> Optical_Density
		{
			get
			{
				return this._Optical_Density;
			}
			set
			{
				if ((this._Optical_Density != value))
				{
					this._Optical_Density = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
